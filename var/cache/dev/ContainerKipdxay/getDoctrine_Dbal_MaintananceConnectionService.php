<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'doctrine.dbal.maintanance_connection' shared service.

$a = new \Doctrine\DBAL\Logging\LoggerChain();
$a->addLogger(${($_ = isset($this->services['doctrine.dbal.logger']) ? $this->services['doctrine.dbal.logger'] : $this->getDoctrine_Dbal_LoggerService()) && false ?: '_'});
$a->addLogger(${($_ = isset($this->services['doctrine.dbal.logger.profiling.maintanance']) ? $this->services['doctrine.dbal.logger.profiling.maintanance'] : $this->services['doctrine.dbal.logger.profiling.maintanance'] = new \Doctrine\DBAL\Logging\DebugStack()) && false ?: '_'});

$b = new \Doctrine\DBAL\Configuration();
$b->setSQLLogger($a);

$c = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
$c->addEventSubscriber(${($_ = isset($this->services['doctrine.orm.listeners.resolve_target_entity']) ? $this->services['doctrine.orm.listeners.resolve_target_entity'] : $this->getDoctrine_Orm_Listeners_ResolveTargetEntityService()) && false ?: '_'});
$c->addEventSubscriber(${($_ = isset($this->services['fos_user.user_listener']) ? $this->services['fos_user.user_listener'] : $this->getFosUser_UserListenerService()) && false ?: '_'});
$c->addEventListener(array(0 => 'loadClassMetadata'), ${($_ = isset($this->services['dende_calendar.listener.doctrine_event_listener']) ? $this->services['dende_calendar.listener.doctrine_event_listener'] : $this->getDendeCalendar_Listener_DoctrineEventListenerService()) && false ?: '_'});

return $this->services['doctrine.dbal.maintanance_connection'] = ${($_ = isset($this->services['doctrine.dbal.connection_factory']) ? $this->services['doctrine.dbal.connection_factory'] : $this->getDoctrine_Dbal_ConnectionFactoryService()) && false ?: '_'}->createConnection(array('driver' => 'pdo_mysql', 'host' => 'gyman.vagrant', 'port' => 3306, 'dbname' => 'gyman', 'user' => 'root', 'password' => 'root', 'driverOptions' => array(), 'defaultTableOptions' => array()), $b, $c, array());
