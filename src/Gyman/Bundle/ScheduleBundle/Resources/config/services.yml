#@todo: refactoring

parameters:
    activity_entity.class: Gyman\Bundle\ScheduleBundle\Entity\Activity
    activity_repository.class: Gyman\Bundle\ScheduleBundle\Entity\ActivityRepository
    event_entity.class: Gyman\Bundle\ScheduleBundle\Entity\Event
    event_repository.class: Gyman\Bundle\ScheduleBundle\Entity\EventRepository
    occurence_entity.class: Gyman\Bundle\ScheduleBundle\Entity\Occurence
    occurence_repository.class: Gyman\Bundle\ScheduleBundle\Entity\OccurenceRepository

services:
    activity_manager:
        class:          Gyman\Bundle\ScheduleBundle\Services\Manager\ActivityManager
        parent:         gyman_base_entity_manager

    event_manager:
        class:          Gyman\Bundle\ScheduleBundle\Services\Manager\EventManager
        parent:         gyman_base_entity_manager

    event_repository:
        class:              %event_repository.class%
        factory_service:    doctrine
        factory_method:     getRepository
        arguments:          [ %event_entity.class% ]

    occurence_repository:
        class:              %occurence_repository.class%
        factory_service:    doctrine
        factory_method:     getRepository
        arguments:          [ %occurence_entity.class% ]

    activity_repository:
        class:              %activity_repository.class%
        factory_service:    doctrine
        factory_method:     getRepository
        arguments:          [ %activity_entity.class% ]

    occurences_manager:
        class: Gyman\Bundle\ScheduleBundle\Services\Manager\OccurencesManager
        parent: gyman_base_entity_manager
        calls:
             - [ setRouter, ["@router"] ]

    schedule:
        class: Gyman\Bundle\ScheduleBundle\Services\Schedule
        calls:
             - [ setContainer, ["@service_container"] ]
