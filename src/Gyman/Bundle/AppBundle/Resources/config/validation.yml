Gyman\Domain\Command\UpdateSettingsCommand:
  properties:
    details:
      - Valid: ~
    sections:
      - Valid: ~
      - Count:
          min: 1
          minMessage: Musi istnieć przynajmniej 1 sekcja!
          max: 10
          maxMessage: Nie może istnieć więcej niż 10 sekcji!
    name:
      - NotBlank:
          message: Pole nie może być puste!
      - Length:
          min: 1
          max: 50
    uploadLogo:
      - File:
          maxSize: 2M
      - Image:
          mimeTypes:
            - image/png
            - image/jpg
            - image/jpeg
            - image/gif
Gyman\Bundle\AppBundle\Entity\Section:
  constraints:
      - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
          fields:
            - title
          message: Już istnieje sekcja o takiej nazwie!
  properties:
    title:
      - NotBlank:
          message: Pole nie może być puste!
      - Length:
          min: 1
          max: 50

Gyman\Bundle\ClubBundle\Entity\Details:
  properties:
    opened_from:
      - Regex:
          pattern: /^\d{2}\:\d{2}$/
          match:  true
          message: Godzina otwarcia musi być w formacie XX:XX
    opened_till:
      - Regex:
          pattern: /^\d{2}\:\d{2}$/
          match:  true
          message: Godzina zamknięcia musi być w formacie XX:XX
    zipcode:
      - Regex:
          pattern: /^\d{2}\-\d{3}$/
          match:  true
          message: Kod pocztowy musi być w formacie XX-XXX
    email_address:
      - Email: ~

Gyman\Domain\Command\UpdateMemberCommand:
  constraints:
    - Gyman\Bundle\AppBundle\Validator\UniqueMemberEmail:
        message: member.type.email.already_registered
    - Gyman\Bundle\AppBundle\Validator\UniqueMemberBarcode:
        message: member.type.barcode.already_registered

  properties:
    uploadFile:
      - Image: ~
    email:
      - NotBlank:
          message: Pole nie może być puste!
      - Email:
          message: Adres '{{ value }}' nie jest poprawny.
          checkMX: true

    barcode:
      - NotBlank:
          message: Pole nie może być puste!
    firstname:
      - NotBlank:
          message: Pole nie może być puste!
    lastname:
      - NotBlank:
          message: Pole nie może być puste!
    birthdate:
      - NotBlank:
          message: Pole nie może być puste!
      - Date:
          message: Data musi być w formacie DD.MM.RR
      - Gyman\Bundle\AppBundle\Validator\DateRangeConstraint:
          min: 100 years ago
          max: today
    phone: ~
    notes: ~
    zipcode:
      - Length:
          max: 6
          min: 6
          minMessage: Kod pocztowy musi zawierać 6 znaków
          maxMessage: Kod pocztowy musi zawierać 6 znaków
      - Regex:
          pattern: /^\d{2}\-\d{3}$/
          match:  true
          message: Kod pocztowy musi być w formacie XX-XXX
    gender: ~
    belt: ~
    starred: ~
    sections:
      - Count:
          max: 1
          maxMessage: Uczestnik może należeć tylko do 1 sekcji

Gyman\Domain\Command\OpenEntryCommand:
  constraints:
    - Gyman\Bundle\AppBundle\Validator\PriceSetForPaidEntry: ~
    - Gyman\Bundle\AppBundle\Validator\OnlyEnterOnce: ~
#    - Gyman\Bundle\AppBundle\Validator\CantEnterPastOccurrence: ~
  properties:
    price:
      - Range:
          min: 0
          minMessage: Cena nie może być mniejsza niż 0 PLN.
    startDate:
      - Gyman\Bundle\AppBundle\Validator\DateRangeConstraint:
          min: "today 00:00:00"
          max: "today 23:59:59"

Gyman\Bundle\AppBundle\Entity\Voucher:
  constraints: ~
#    - Gyman\Bundle\AppBundle\Validator\VoucherDateConstraint:
  properties:
    startDate:
      - NotNull:
          message: Należy podać datę początkową.

Gyman\Domain\Command\CreateVoucherCommand:
  constraints:
    - Gyman\Bundle\AppBundle\Validator\MaximumAmountGreaterThanCreditEntriesConstraint: ~

Gyman\DomainBundle\Entity\Price:
  properties:
    amount:
      - Regex:
          pattern: "/^\d+(\.\d\d){0,1}$/"
    currency:
      - Range:
          min: 1
          max: 999
          minMessage: "Najmniejsza możliwa liczba wejść na karnet to 1"
          maxMessage: "Maksymalna liczba wejść na karnet to 999"

Gyman\DomainBundle\Entity\Entry:
  constraints:
    - Callback:
        methods: ~
#          - { "Gyman\Bundle\EntriesBundle\Validator\LeftAmountValidator", "isAmountLeft"}
#          - { "Gyman\Bundle\EntriesBundle\Validator\PriceNotBlankIfPaidEntryTypeValidator", "isPaidAndPriceSet"}
