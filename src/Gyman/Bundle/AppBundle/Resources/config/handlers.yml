---
services:

  gyman.vouchers.create_voucher:
    class: Gyman\Application\Handler\CreateVoucherHandler
    arguments:
      - @gyman.vouchers.repository
      - @event_dispatcher
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\CreateVoucherCommand }

  gyman.vouchers.close_voucher:
    class: Gyman\Application\Service\CloseVoucher
    arguments:
      - @gyman.vouchers.repository
      - @gyman.members.repository
      - @event_dispatcher
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\CloseVoucherCommand }

  gyman.members.upload_member_foto_handler:
    class: Gyman\Application\Handler\UploadMemberFotoHandler
    arguments:
      - %galleryDirectory%
      - @=service(parameter('subdomain_provider_service'))

  gyman.members.update_member:
    class: Gyman\Application\Handler\UpdateMemberHandler
    arguments: [@gyman.members.repository, @gyman.members.upload_member_foto_handler, @event_dispatcher]
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\UpdateMemberCommand }

  gyman.members.create_member:
    class: Gyman\Application\Handler\CreateMemberHandler
    arguments: [@gyman.members.repository, @gyman.members.upload_member_foto_handler, @event_dispatcher]
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\CreateMemberCommand }

  gyman.app.remove_entry_from_occurrence: # todo: change to command/handler
    class: Gyman\Bundle\AppBundle\Services\RemoveEntryFromOccurrence
    arguments:
      - @gyman.entries.repository

  gyman.entries.open_entry:
    class: Gyman\Application\Handler\OpenEntryHandler
    arguments:
      - @gyman.members.repository
      - @event_dispatcher
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\OpenEntryCommand }

  gyman.entries.close_entry:
    class: Gyman\Application\Handler\CloseEntryHandler
    arguments:
      - @gyman.members.repository
      - @event_dispatcher
    tags:
        - { name: tactician.handler, command: Gyman\Application\Command\CloseEntryCommand }

  gyman.members.upload_club_logo_handler:
    class: Gyman\Application\Handler\UploadClubLogoHandler
    arguments:
      - %galleryDirectory%
      - @=service(parameter('subdomain_provider_service'))

  gyman.app.handler.settings_update:
    class: Gyman\Bundle\AppBundle\Services\SettingsUpdateHandler
    arguments:
      - @gyman.repository.section
      - @gyman.club.repository
      - @=service('gyman.club.provider').getCurrentClub()
      - @gyman.members.upload_club_logo_handler

  gyman.app.handler.clear_expired_current_vouchers:
    class: Gyman\Application\Handler\ClearExpiredCurrentVouchersHandler
    arguments:
      - @gyman.members.repository
    tags:
      - { name: tactician.handler, command: Gyman\Application\Command\ClearExpiredCurrentVouchersCommand }